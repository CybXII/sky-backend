
name: backend-ci
on:
  push:
    branches: [ "develop", "main" ]

jobs:
  test-build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/sky-backend
      TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install deps
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-django

      - name: Unit & API tests
        run: pytest -q

      - name: Generate OpenAPI schema
        run: python manage.py generateschema > openapi.json

      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi
          path: openapi.json

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Trigger infra (DEV) on develop
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            mkdir -p ~/sky-infra
            # Create .env.dev file
            echo "CERT_EMAIL=${{ secrets.CERT_EMAIL }}" > ~/sky-infra/.env.dev
            echo "OWNER_GITHUB=${{ secrets.OWNER_GITHUB }}" >> ~/sky-infra/.env.dev
            echo "DEV_APP_HOST=${{ secrets.DEV_APP_HOST }}" >> ~/sky-infra/.env.dev
            echo "DEV_API_HOST=${{ secrets.DEV_API_HOST }}" >> ~/sky-infra/.env.dev
            echo "DEV_SHOP_HOST=${{ secrets.DEV_SHOP_HOST }}" >> ~/sky-infra/.env.dev
            echo "DEV_FRONTEND_TAG=${{ secrets.DEV_FRONTEND_TAG }}" >> ~/sky-infra/.env.dev
            echo "DEV_BACKEND_TAG=${{ env.TAG }}" >> ~/sky-infra/.env.dev
            echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY_DEV }}" >> ~/sky-infra/.env.dev
            echo "PG_USER=${{ secrets.PG_USER }}" >> ~/sky-infra/.env.dev
            echo "PG_DB=skylad_dev" >> ~/sky-infra/.env.dev
            echo "PG_PASSWORD=${{ secrets.PG_PASSWORD_DEV }}" >> ~/sky-infra/.env.dev
            echo "MARIADB_USER=${{ secrets.MARIADB_USER }}" >> ~/sky-infra/.env.dev
            echo "MARIADB_DB=skylad_dev_mariadb" >> ~/sky-infra/.env.dev
            echo "MARIADB_ROOT_PASSWORD=${{ secrets.MARIADB_ROOT_PASSWORD_DEV }}" >> ~/sky-infra/.env.dev
            echo "MARIADB_PASSWORD=${{ secrets.MARIADB_PASSWORD_DEV }}" >> ~/sky-infra/.env.dev
            
            cd ~/sky-infra
            docker compose -f compose.dev.yml --env-file .env.dev pull dev-backend
            docker compose -f compose.dev.yml --env-file .env.dev up -d dev-backend
